on:
  push:
    tags:
      - 'v*.*.*'

permissions:
  contents: write

jobs:
  build:
    name: Build on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Install dependencies (Linux)
        if: runner.os == 'Linux'
        run: |
          sudo apt-get update
          sudo apt-get install -y build-essential cmake ccache
        shell: bash

      - name: Install dependencies (macOS)
        if: runner.os == 'macOS'
        run: |
          brew update
          brew install cmake
        shell: bash

      - name: Install dependencies (Windows)
        if: runner.os == 'Windows'
        shell: pwsh
        run: |
          choco install -y cmake --installargs 'ADD_CMAKE_TO_PATH=System'

      - name: Configure
        run: |
          cmake -S . -B build -DCMAKE_BUILD_TYPE=Release -DCMAKE_INSTALL_PREFIX=install
        shell: bash

      - name: Build
        run: |
          if [ "${{ runner.os }}" = "Windows" ]; then
            cmake --build build --config Release -- /m
          else
            cmake --build build --config Release -- -j$(nproc || sysctl -n hw.ncpu)
          fi
        shell: bash

      - name: Install
        run: |
          cmake --install build --prefix install --config Release
        shell: bash

      - name: Package (Windows)
        if: runner.os == 'Windows'
        shell: pwsh
        run: |
          $tag = "${{ github.ref_name }}"
          $filename = "$tag-windows-x86_64.zip"
          New-Item -ItemType Directory -Force -Path dist | Out-Null
          Compress-Archive -Path install\* -DestinationPath "dist\$filename"

      - name: Package (linux/macOS)
        if: runner.os != 'Windows'
        run: |
          tag=${GITHUB_REF#refs/tags/}
          filename="${tag}-${{ matrix.os }}-x86_64.tar.gz"
          mkdir -p dist
          tar -czf dist/${filename} -C install .
        shell: bash

      - name: Upload job artifact
        uses: actions/upload-artifact@v4
        with:
          name: dist-${{ matrix.os }}
          path: dist/*

  create-release:
    name: Create GitHub Release and attach assets
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Download all artifacts
        uses: actions/download-artifact@v4
        with:
          path: artifacts

      - name: Create GitHub release
        id: create_release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ github.ref_name }}
          name: ${{ github.ref_name }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Upload release assets
        uses: softprops/action-gh-release@v1
        with:
          files: artifacts/**/*
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}